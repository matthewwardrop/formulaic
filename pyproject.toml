[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "formulaic"
description = "An implementation of Wilkinson formulas."
authors = [
    {name = "Matthew Wardrop", email = "mpwardrop@gmail.com"},
]
license = "MIT"
readme = "README.md"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.7.2"
dependencies = [
    "astor>=0.8; python_version < \"3.9\"",
    "cached-property>=1.3.0; python_version < \"3.8\"",
    "graphlib-backport>=1.0.0; python_version < \"3.9\"",
    "interface-meta>=1.2.0",
    "numpy>=1.16.5",
    "pandas>=1.0",
    "scipy>=1.6",
    "wrapt>=1.0",
    "typing-extensions>=4.2.0",
]
dynamic = ["version"]

[project.urls]
repository = "https://github.com/matthewwardrop/formulaic"
documentation = "https://matthewwardrop.github.io/formulaic"

[project.optional-dependencies]
arrow = ["pyarrow>=1"]
calculus = ["sympy>=1.3,!=1.10"]

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "formulaic/_version.py"

# Build target configuration

[tool.hatch.build.targets.sdist]
include = [
    "docsite",
    "benchmarks",
    "formulaic",
    "tests",
    "LICENSE",
    "pyproject.toml",
    "README.md",
]

# Testing configuration

[tool.hatch.envs.default]
dependencies = [
    'formulaic[arrow,calculus]; python_version < "3.12"',
    'formulaic[calculus]; python_version == "3.12"',
    "pytest==7.4.3",
    "pytest-cov==4.1.0",
]

[tool.hatch.envs.default.scripts]
tests = 'pytest --cov-report=term-missing --cov-config=pyproject.toml --cov=formulaic --cov-report=xml -vv {args:tests}'

[[tool.hatch.envs.test.matrix]]
python = ["37", "38", "39", "310", "311"]

[[tool.hatch.envs.test_min.matrix]]
python = ["37"]

[tool.hatch.envs.test_min]
dependencies = [
    "formulaic[arrow,calculus]",
    "pytest==7.2.0",
    "pytest-cov==4.0.0",
    "astor==0.8; python_version < \"3.9\"",
    "cached-property==1.3.0; python_version < \"3.8\"",
    "graphlib-backport==1.0.0; python_version < \"3.9\"",
    "interface-meta==1.2.0",
    "numpy==1.16.5",
    "pandas==1.0",
    "scipy==1.6",
    "wrapt==1.0",
    "typing-extensions==4.2.0",
]

[tool.hatch.envs.lint]
dependencies = [
    "black==22.6",
    "flake8==5.0.4",
    "flake8-pyproject",
    "mypy==1.9.0",
    "mypy-extensions==1.0.0",
    "pylint==2.17.4",
    "pytest-cov==3.0.0",
    "pytest==6.2.5",
]

[tool.hatch.envs.lint.scripts]
check = [
    "black --check formulaic tests",
    "flake8 formulaic",
    "pylint formulaic",
    "mypy formulaic",
]
format = "black formulaic tests"

# Linting configuration

[tool.flake8]
ignore = [
    "C901","E203","E501","E712","E722","E731","W503","W504","W601"
]
max-complexity = 25
import-order-style = "edited"
application-import-names = "formulaic"

[tool.pylint."MESSAGES CONTROL"]
disable = [
    "cyclic-import",
    "duplicate-code",
    "eval-used",
    "fixme",
    "import-outside-toplevel",
    "invalid-name",
    "line-too-long",
    "missing-class-docstring",
    "missing-function-docstring",
    "missing-module-docstring",
    "no-member",
    "protected-access",
    "redefined-outer-name",
    "too-few-public-methods",
    "too-many-arguments",
    "too-many-branches",
    "too-many-instance-attributes",
    "too-many-statements",
    "ungrouped-imports",
    "unnecessary-lambda-assignment",
    "unused-argument",
    "use-dict-literal",
]

[tool.mypy]
allow_redefinition = true
disallow_untyped_defs = true
disallow_any_generics = false
ignore_missing_imports = true
